// <auto-generated />
using Mango.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mango.Services.ProductAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mango.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            CategoryName = "Burger",
                            Description = "Klasik dana eti burger, cheddar peyniri ile servis edilir.",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "Cheeseburger",
                            Price = 45.0
                        },
                        new
                        {
                            ProductID = 2,
                            CategoryName = "Pizza",
                            Description = "İnce hamur üzerine bol mozzarella ve pepperoni dilimleri.",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "Pepperoni Pizza",
                            Price = 60.0
                        },
                        new
                        {
                            ProductID = 3,
                            CategoryName = "Wrap",
                            Description = "Izgara tavuk, yeşillik ve özel sos ile lavaşa sarılmış lezzet.",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "Tavuklu Wrap",
                            Price = 35.0
                        },
                        new
                        {
                            ProductID = 4,
                            CategoryName = "Appetizer",
                            Description = "Dışı çıtır, içi yumuşak klasik patates kızartması.",
                            ImageUrl = "https://placehold.co/603x403",
                            Name = "Patates Kızartması",
                            Price = 20.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
